// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>
    /// Origin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN.
    /// </summary>
    public partial class OriginGroup :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroup,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupInternal,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IValidates
    {
        /// <summary>
        /// Backing field for Inherited model <see cref= "Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResource" />
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResource __resource = new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.Resource();

        /// <summary>The number of seconds between health probes.Default is 240sec.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public int? HealthProbeSettingProbeIntervalInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).HealthProbeSettingProbeIntervalInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).HealthProbeSettingProbeIntervalInSecond = value ?? default(int); }

        /// <summary>
        /// The path relative to the origin that is used to determine the health of the origin.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string HealthProbeSettingProbePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).HealthProbeSettingProbePath; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).HealthProbeSettingProbePath = value ?? null; }

        /// <summary>Protocol to use for health probe.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProbeProtocol? HealthProbeSettingProbeProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).HealthProbeSettingProbeProtocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).HealthProbeSettingProbeProtocol = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProbeProtocol)""); }

        /// <summary>The type of health probe request that is made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.HealthProbeRequestType? HealthProbeSettingProbeRequestType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).HealthProbeSettingProbeRequestType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).HealthProbeSettingProbeRequestType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.HealthProbeRequestType)""); }

        /// <summary>Resource ID.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).Id; }

        /// <summary>Internal Acessors for HealthProbeSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParameters Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupInternal.HealthProbeSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).HealthProbeSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).HealthProbeSetting = value; }

        /// <summary>Internal Acessors for Property</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupProperties Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupInternal.Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.OriginGroupProperties()); set { {_property = value;} } }

        /// <summary>Internal Acessors for ProvisioningState</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupInternal.ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupPropertiesInternal)Property).ProvisioningState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupPropertiesInternal)Property).ProvisioningState = value; }

        /// <summary>Internal Acessors for ResourceState</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OriginGroupResourceState? Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupInternal.ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupPropertiesInternal)Property).ResourceState; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupPropertiesInternal)Property).ResourceState = value; }

        /// <summary>Internal Acessors for ResponseBasedOriginErrorDetectionSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParameters Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupInternal.ResponseBasedOriginErrorDetectionSetting { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).ResponseBasedOriginErrorDetectionSetting; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).ResponseBasedOriginErrorDetectionSetting = value; }

        /// <summary>Internal Acessors for Id</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal.Id { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).Id; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).Id = value; }

        /// <summary>Internal Acessors for Name</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal.Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).Name; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).Name = value; }

        /// <summary>Internal Acessors for SystemData</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ISystemData Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal.SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemData; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemData = value; }

        /// <summary>Internal Acessors for Type</summary>
        string Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal.Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).Type; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).Type = value; }

        /// <summary>Resource name.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string Name { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).Name; }

        /// <summary>The source of the content being delivered via CDN within given origin group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceReference[] Origin { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).Origin; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).Origin = value ?? null /* arrayOf */; }

        /// <summary>Backing field for <see cref="Property" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupProperties _property;

        /// <summary>The JSON object that contains the properties of the origin group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupProperties Property { get => (this._property = this._property ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.OriginGroupProperties()); set => this._property = value; }

        /// <summary>Provisioning status of the origin group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string ProvisioningState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupPropertiesInternal)Property).ProvisioningState; }

        /// <summary>Gets the resource group name</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public string ResourceGroupName { get => (new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Success ? new global::System.Text.RegularExpressions.Regex("^/subscriptions/(?<subscriptionId>[^/]+)/resourceGroups/(?<resourceGroupName>[^/]+)/providers/", global::System.Text.RegularExpressions.RegexOptions.IgnoreCase).Match(this.Id).Groups["resourceGroupName"].Value : null); }

        /// <summary>Resource status of the origin group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OriginGroupResourceState? ResourceState { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupPropertiesInternal)Property).ResourceState; }

        /// <summary>
        /// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHttpErrorRangeParameters[] ResponseBasedOriginErrorDetectionSettingHttpErrorRange { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).ResponseBasedOriginErrorDetectionSettingHttpErrorRange; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).ResponseBasedOriginErrorDetectionSettingHttpErrorRange = value ?? null /* arrayOf */; }

        /// <summary>
        /// Type of response errors for real user requests for which origin will be deemed unhealthy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes? ResponseBasedOriginErrorDetectionSettingResponseBasedDetectedErrorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).ResponseBasedOriginErrorDetectionSettingResponseBasedDetectedErrorType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).ResponseBasedOriginErrorDetectionSettingResponseBasedDetectedErrorType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes)""); }

        /// <summary>The percentage of failed requests in the sample where failover should trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public int? ResponseBasedOriginErrorDetectionSettingResponseBasedFailoverThresholdPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).ResponseBasedOriginErrorDetectionSettingResponseBasedFailoverThresholdPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).ResponseBasedOriginErrorDetectionSettingResponseBasedFailoverThresholdPercentage = value ?? default(int); }

        /// <summary>Read only system data</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ISystemData SystemData { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemData; }

        /// <summary>The timestamp of resource creation (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataCreatedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataCreatedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataCreatedAt = value ?? default(global::System.DateTime); }

        /// <summary>An identifier for the identity that created the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string SystemDataCreatedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataCreatedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataCreatedBy = value ?? null; }

        /// <summary>The type of identity that created the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.IdentityType? SystemDataCreatedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataCreatedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataCreatedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.IdentityType)""); }

        /// <summary>The timestamp of resource last modification (UTC)</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public global::System.DateTime? SystemDataLastModifiedAt { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataLastModifiedAt; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataLastModifiedAt = value ?? default(global::System.DateTime); }

        /// <summary>An identifier for the identity that last modified the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string SystemDataLastModifiedBy { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataLastModifiedBy; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataLastModifiedBy = value ?? null; }

        /// <summary>The type of identity that last modified the resource</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.IdentityType? SystemDataLastModifiedByType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataLastModifiedByType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).SystemDataLastModifiedByType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.IdentityType)""); }

        /// <summary>
        /// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint
        /// is added. Default is 10 mins. This property is currently not supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public int? TrafficRestorationTimeToHealedOrNewEndpointsInMinute { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).TrafficRestorationTimeToHealedOrNewEndpointsInMinute; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupUpdatePropertiesParametersInternal)Property).TrafficRestorationTimeToHealedOrNewEndpointsInMinute = value ?? default(int); }

        /// <summary>Resource type.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inherited)]
        public string Type { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal)__resource).Type; }

        /// <summary>Creates an new <see cref="OriginGroup" /> instance.</summary>
        public OriginGroup()
        {

        }

        /// <summary>Validates that this object meets the validation criteria.</summary>
        /// <param name="eventListener">an <see cref="Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener" /> instance that will receive validation
        /// events.</param>
        /// <returns>
        /// A < see cref = "global::System.Threading.Tasks.Task" /> that will be complete when validation is completed.
        /// </returns>
        public async global::System.Threading.Tasks.Task Validate(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IEventListener eventListener)
        {
            await eventListener.AssertNotNull(nameof(__resource), __resource);
            await eventListener.AssertObjectIsValid(nameof(__resource), __resource);
        }
    }
    /// Origin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN.
    public partial interface IOriginGroup :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResource
    {
        /// <summary>The number of seconds between health probes.Default is 240sec.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of seconds between health probes.Default is 240sec.",
        SerializedName = @"probeIntervalInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? HealthProbeSettingProbeIntervalInSecond { get; set; }
        /// <summary>
        /// The path relative to the origin that is used to determine the health of the origin.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The path relative to the origin that is used to determine the health of the origin.",
        SerializedName = @"probePath",
        PossibleTypes = new [] { typeof(string) })]
        string HealthProbeSettingProbePath { get; set; }
        /// <summary>Protocol to use for health probe.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Protocol to use for health probe.",
        SerializedName = @"probeProtocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProbeProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProbeProtocol? HealthProbeSettingProbeProtocol { get; set; }
        /// <summary>The type of health probe request that is made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of health probe request that is made.",
        SerializedName = @"probeRequestType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.HealthProbeRequestType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.HealthProbeRequestType? HealthProbeSettingProbeRequestType { get; set; }
        /// <summary>The source of the content being delivered via CDN within given origin group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The source of the content being delivered via CDN within given origin group.",
        SerializedName = @"origins",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceReference[] Origin { get; set; }
        /// <summary>Provisioning status of the origin group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Provisioning status of the origin group.",
        SerializedName = @"provisioningState",
        PossibleTypes = new [] { typeof(string) })]
        string ProvisioningState { get;  }
        /// <summary>Resource status of the origin group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = true,
        Description = @"Resource status of the origin group.",
        SerializedName = @"resourceState",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OriginGroupResourceState) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OriginGroupResourceState? ResourceState { get;  }
        /// <summary>
        /// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.",
        SerializedName = @"httpErrorRanges",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHttpErrorRangeParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHttpErrorRangeParameters[] ResponseBasedOriginErrorDetectionSettingHttpErrorRange { get; set; }
        /// <summary>
        /// Type of response errors for real user requests for which origin will be deemed unhealthy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of response errors for real user requests for which origin will be deemed unhealthy",
        SerializedName = @"responseBasedDetectedErrorTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes? ResponseBasedOriginErrorDetectionSettingResponseBasedDetectedErrorType { get; set; }
        /// <summary>The percentage of failed requests in the sample where failover should trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The percentage of failed requests in the sample where failover should trigger.",
        SerializedName = @"responseBasedFailoverThresholdPercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? ResponseBasedOriginErrorDetectionSettingResponseBasedFailoverThresholdPercentage { get; set; }
        /// <summary>
        /// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint
        /// is added. Default is 10 mins. This property is currently not supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.",
        SerializedName = @"trafficRestorationTimeToHealedOrNewEndpointsInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? TrafficRestorationTimeToHealedOrNewEndpointsInMinute { get; set; }

    }
    /// Origin group comprising of origins is used for load balancing to origins when the content cannot be served from CDN.
    internal partial interface IOriginGroupInternal :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceInternal
    {
        /// <summary>
        /// Health probe settings to the origin that is used to determine the health of the origin.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParameters HealthProbeSetting { get; set; }
        /// <summary>The number of seconds between health probes.Default is 240sec.</summary>
        int? HealthProbeSettingProbeIntervalInSecond { get; set; }
        /// <summary>
        /// The path relative to the origin that is used to determine the health of the origin.
        /// </summary>
        string HealthProbeSettingProbePath { get; set; }
        /// <summary>Protocol to use for health probe.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProbeProtocol? HealthProbeSettingProbeProtocol { get; set; }
        /// <summary>The type of health probe request that is made.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.HealthProbeRequestType? HealthProbeSettingProbeRequestType { get; set; }
        /// <summary>The source of the content being delivered via CDN within given origin group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceReference[] Origin { get; set; }
        /// <summary>The JSON object that contains the properties of the origin group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IOriginGroupProperties Property { get; set; }
        /// <summary>Provisioning status of the origin group.</summary>
        string ProvisioningState { get; set; }
        /// <summary>Resource status of the origin group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.OriginGroupResourceState? ResourceState { get; set; }
        /// <summary>
        /// The JSON object that contains the properties to determine origin health using real requests/responses. This property is
        /// currently not supported.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParameters ResponseBasedOriginErrorDetectionSetting { get; set; }
        /// <summary>
        /// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHttpErrorRangeParameters[] ResponseBasedOriginErrorDetectionSettingHttpErrorRange { get; set; }
        /// <summary>
        /// Type of response errors for real user requests for which origin will be deemed unhealthy
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes? ResponseBasedOriginErrorDetectionSettingResponseBasedDetectedErrorType { get; set; }
        /// <summary>The percentage of failed requests in the sample where failover should trigger.</summary>
        int? ResponseBasedOriginErrorDetectionSettingResponseBasedFailoverThresholdPercentage { get; set; }
        /// <summary>
        /// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint
        /// is added. Default is 10 mins. This property is currently not supported.
        /// </summary>
        int? TrafficRestorationTimeToHealedOrNewEndpointsInMinute { get; set; }

    }
}