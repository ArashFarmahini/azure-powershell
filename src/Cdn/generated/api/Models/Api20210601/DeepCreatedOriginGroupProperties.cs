// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

namespace Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601
{
    using static Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Extensions;

    /// <summary>Properties of the origin group created on the CDN endpoint.</summary>
    public partial class DeepCreatedOriginGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeepCreatedOriginGroupProperties,
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeepCreatedOriginGroupPropertiesInternal
    {

        /// <summary>Backing field for <see cref="HealthProbeSetting" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParameters _healthProbeSetting;

        /// <summary>
        /// Health probe settings to the origin that is used to determine the health of the origin.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParameters HealthProbeSetting { get => (this._healthProbeSetting = this._healthProbeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.HealthProbeParameters()); set => this._healthProbeSetting = value; }

        /// <summary>The number of seconds between health probes.Default is 240sec.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public int? HealthProbeSettingProbeIntervalInSecond { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParametersInternal)HealthProbeSetting).ProbeIntervalInSecond; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParametersInternal)HealthProbeSetting).ProbeIntervalInSecond = value ?? default(int); }

        /// <summary>
        /// The path relative to the origin that is used to determine the health of the origin.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public string HealthProbeSettingProbePath { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParametersInternal)HealthProbeSetting).ProbePath; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParametersInternal)HealthProbeSetting).ProbePath = value ?? null; }

        /// <summary>Protocol to use for health probe.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProbeProtocol? HealthProbeSettingProbeProtocol { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParametersInternal)HealthProbeSetting).ProbeProtocol; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParametersInternal)HealthProbeSetting).ProbeProtocol = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProbeProtocol)""); }

        /// <summary>The type of health probe request that is made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.HealthProbeRequestType? HealthProbeSettingProbeRequestType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParametersInternal)HealthProbeSetting).ProbeRequestType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParametersInternal)HealthProbeSetting).ProbeRequestType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.HealthProbeRequestType)""); }

        /// <summary>Internal Acessors for HealthProbeSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParameters Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeepCreatedOriginGroupPropertiesInternal.HealthProbeSetting { get => (this._healthProbeSetting = this._healthProbeSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.HealthProbeParameters()); set { {_healthProbeSetting = value;} } }

        /// <summary>Internal Acessors for ResponseBasedOriginErrorDetectionSetting</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParameters Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IDeepCreatedOriginGroupPropertiesInternal.ResponseBasedOriginErrorDetectionSetting { get => (this._responseBasedOriginErrorDetectionSetting = this._responseBasedOriginErrorDetectionSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ResponseBasedOriginErrorDetectionParameters()); set { {_responseBasedOriginErrorDetectionSetting = value;} } }

        /// <summary>Backing field for <see cref="Origin" /> property.</summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceReference[] _origin;

        /// <summary>The source of the content being delivered via CDN within given origin group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceReference[] Origin { get => this._origin; set => this._origin = value; }

        /// <summary>
        /// Backing field for <see cref="ResponseBasedOriginErrorDetectionSetting" /> property.
        /// </summary>
        private Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParameters _responseBasedOriginErrorDetectionSetting;

        /// <summary>
        /// The JSON object that contains the properties to determine origin health using real requests/responses.This property is
        /// currently not supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        internal Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParameters ResponseBasedOriginErrorDetectionSetting { get => (this._responseBasedOriginErrorDetectionSetting = this._responseBasedOriginErrorDetectionSetting ?? new Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.ResponseBasedOriginErrorDetectionParameters()); set => this._responseBasedOriginErrorDetectionSetting = value; }

        /// <summary>
        /// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHttpErrorRangeParameters[] ResponseBasedOriginErrorDetectionSettingHttpErrorRange { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParametersInternal)ResponseBasedOriginErrorDetectionSetting).HttpErrorRange; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParametersInternal)ResponseBasedOriginErrorDetectionSetting).HttpErrorRange = value ?? null /* arrayOf */; }

        /// <summary>
        /// Type of response errors for real user requests for which origin will be deemed unhealthy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes? ResponseBasedOriginErrorDetectionSettingResponseBasedDetectedErrorType { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParametersInternal)ResponseBasedOriginErrorDetectionSetting).ResponseBasedDetectedErrorType; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParametersInternal)ResponseBasedOriginErrorDetectionSetting).ResponseBasedDetectedErrorType = value ?? ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes)""); }

        /// <summary>The percentage of failed requests in the sample where failover should trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Inlined)]
        public int? ResponseBasedOriginErrorDetectionSettingResponseBasedFailoverThresholdPercentage { get => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParametersInternal)ResponseBasedOriginErrorDetectionSetting).ResponseBasedFailoverThresholdPercentage; set => ((Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParametersInternal)ResponseBasedOriginErrorDetectionSetting).ResponseBasedFailoverThresholdPercentage = value ?? default(int); }

        /// <summary>
        /// Backing field for <see cref="TrafficRestorationTimeToHealedOrNewEndpointsInMinute" /> property.
        /// </summary>
        private int? _trafficRestorationTimeToHealedOrNewEndpointsInMinute;

        /// <summary>
        /// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint
        /// is added. Default is 10 mins. This property is currently not supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Origin(Microsoft.Azure.PowerShell.Cmdlets.Cdn.PropertyOrigin.Owned)]
        public int? TrafficRestorationTimeToHealedOrNewEndpointsInMinute { get => this._trafficRestorationTimeToHealedOrNewEndpointsInMinute; set => this._trafficRestorationTimeToHealedOrNewEndpointsInMinute = value; }

        /// <summary>Creates an new <see cref="DeepCreatedOriginGroupProperties" /> instance.</summary>
        public DeepCreatedOriginGroupProperties()
        {

        }
    }
    /// Properties of the origin group created on the CDN endpoint.
    public partial interface IDeepCreatedOriginGroupProperties :
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.IJsonSerializable
    {
        /// <summary>The number of seconds between health probes.Default is 240sec.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The number of seconds between health probes.Default is 240sec.",
        SerializedName = @"probeIntervalInSeconds",
        PossibleTypes = new [] { typeof(int) })]
        int? HealthProbeSettingProbeIntervalInSecond { get; set; }
        /// <summary>
        /// The path relative to the origin that is used to determine the health of the origin.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The path relative to the origin that is used to determine the health of the origin.",
        SerializedName = @"probePath",
        PossibleTypes = new [] { typeof(string) })]
        string HealthProbeSettingProbePath { get; set; }
        /// <summary>Protocol to use for health probe.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Protocol to use for health probe.",
        SerializedName = @"probeProtocol",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProbeProtocol) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProbeProtocol? HealthProbeSettingProbeProtocol { get; set; }
        /// <summary>The type of health probe request that is made.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The type of health probe request that is made.",
        SerializedName = @"probeRequestType",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.HealthProbeRequestType) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.HealthProbeRequestType? HealthProbeSettingProbeRequestType { get; set; }
        /// <summary>The source of the content being delivered via CDN within given origin group.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = true,
        ReadOnly = false,
        Description = @"The source of the content being delivered via CDN within given origin group.",
        SerializedName = @"origins",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceReference) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceReference[] Origin { get; set; }
        /// <summary>
        /// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.",
        SerializedName = @"httpErrorRanges",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHttpErrorRangeParameters) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHttpErrorRangeParameters[] ResponseBasedOriginErrorDetectionSettingHttpErrorRange { get; set; }
        /// <summary>
        /// Type of response errors for real user requests for which origin will be deemed unhealthy
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Type of response errors for real user requests for which origin will be deemed unhealthy",
        SerializedName = @"responseBasedDetectedErrorTypes",
        PossibleTypes = new [] { typeof(Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes) })]
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes? ResponseBasedOriginErrorDetectionSettingResponseBasedDetectedErrorType { get; set; }
        /// <summary>The percentage of failed requests in the sample where failover should trigger.</summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"The percentage of failed requests in the sample where failover should trigger.",
        SerializedName = @"responseBasedFailoverThresholdPercentage",
        PossibleTypes = new [] { typeof(int) })]
        int? ResponseBasedOriginErrorDetectionSettingResponseBasedFailoverThresholdPercentage { get; set; }
        /// <summary>
        /// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint
        /// is added. Default is 10 mins. This property is currently not supported.
        /// </summary>
        [Microsoft.Azure.PowerShell.Cmdlets.Cdn.Runtime.Info(
        Required = false,
        ReadOnly = false,
        Description = @"Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.",
        SerializedName = @"trafficRestorationTimeToHealedOrNewEndpointsInMinutes",
        PossibleTypes = new [] { typeof(int) })]
        int? TrafficRestorationTimeToHealedOrNewEndpointsInMinute { get; set; }

    }
    /// Properties of the origin group created on the CDN endpoint.
    internal partial interface IDeepCreatedOriginGroupPropertiesInternal

    {
        /// <summary>
        /// Health probe settings to the origin that is used to determine the health of the origin.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHealthProbeParameters HealthProbeSetting { get; set; }
        /// <summary>The number of seconds between health probes.Default is 240sec.</summary>
        int? HealthProbeSettingProbeIntervalInSecond { get; set; }
        /// <summary>
        /// The path relative to the origin that is used to determine the health of the origin.
        /// </summary>
        string HealthProbeSettingProbePath { get; set; }
        /// <summary>Protocol to use for health probe.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ProbeProtocol? HealthProbeSettingProbeProtocol { get; set; }
        /// <summary>The type of health probe request that is made.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.HealthProbeRequestType? HealthProbeSettingProbeRequestType { get; set; }
        /// <summary>The source of the content being delivered via CDN within given origin group.</summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResourceReference[] Origin { get; set; }
        /// <summary>
        /// The JSON object that contains the properties to determine origin health using real requests/responses.This property is
        /// currently not supported.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IResponseBasedOriginErrorDetectionParameters ResponseBasedOriginErrorDetectionSetting { get; set; }
        /// <summary>
        /// The list of Http status code ranges that are considered as server errors for origin and it is marked as unhealthy.
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Models.Api20210601.IHttpErrorRangeParameters[] ResponseBasedOriginErrorDetectionSettingHttpErrorRange { get; set; }
        /// <summary>
        /// Type of response errors for real user requests for which origin will be deemed unhealthy
        /// </summary>
        Microsoft.Azure.PowerShell.Cmdlets.Cdn.Support.ResponseBasedDetectedErrorTypes? ResponseBasedOriginErrorDetectionSettingResponseBasedDetectedErrorType { get; set; }
        /// <summary>The percentage of failed requests in the sample where failover should trigger.</summary>
        int? ResponseBasedOriginErrorDetectionSettingResponseBasedFailoverThresholdPercentage { get; set; }
        /// <summary>
        /// Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint
        /// is added. Default is 10 mins. This property is currently not supported.
        /// </summary>
        int? TrafficRestorationTimeToHealedOrNewEndpointsInMinute { get; set; }

    }
}